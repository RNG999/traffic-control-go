name: Test

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

env:
  GO_VERSION_DEFAULT: '1.23'
  GO_VERSION_MATRIX: '["1.21", "1.22", "1.23"]'

permissions:
  contents: read
  security-events: write
  actions: read
  checks: write
  pull-requests: read

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.21', '1.22', '1.23']
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
        
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ matrix.go-version }}-
          
    - name: Download dependencies
      run: go mod download
      
    - name: Verify dependencies
      run: go mod verify
      
    - name: Run vet
      run: go vet ./...
      
    - name: Run tests
      run: go test -race -coverprofile=coverage.out -covermode=atomic ./internal/domain/valueobjects/... ./internal/infrastructure/netlink/... ./pkg/... ./api/... ./test/...
      
    - name: Run unit tests
      run: go test -v ./test/unit/...
      
    - name: Run integration tests
      run: go test -v ./test/integration/...
      
    - name: Run example tests
      run: go test -v ./test/examples/...
      
    - name: Install iperf3 for integration tests
      if: matrix.go-version == '1.23'
      run: |
        sudo apt-get update
        sudo apt-get install -y iperf3 iproute2
        
    - name: Run integration tests
      if: matrix.go-version == '1.23'
      run: |
        sudo -E env "PATH=$PATH" go test -v -tags=integration ./test/integration/... -count=1 || true
      
    - name: Upload coverage to Codecov
      if: matrix.go-version == '1.23'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella
        
  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION_DEFAULT }}
        
    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v8
      with:
        version: latest
        args: --timeout=5m
        
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION_DEFAULT }}
        
    - name: Run Gosec Security Scanner
      uses: securego/gosec@master
      with:
        args: '-no-fail -fmt sarif -out results.sarif ./...'
        
    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: results.sarif