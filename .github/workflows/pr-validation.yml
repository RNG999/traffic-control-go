name: PR Validation

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  validate-issue-link:
    runs-on: ubuntu-latest
    name: Validate Issue Link
    steps:
      - name: Check for Issue Reference
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            
            console.log('=== PR VALIDATION DEBUG ===');
            console.log('PR Number:', prNumber);
            
            let hasValidIssueReference = false;
            let foundIssues = [];
            
            try {
              // GitHub APIを使用してPRに関連するIssueを取得
              const { data: timelineEvents } = await github.rest.issues.listEventsForTimeline({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber
              });
              
              console.log('Timeline events found:', timelineEvents.length);
              
              // connected/cross-referencedイベントからIssue番号を抽出
              for (const event of timelineEvents) {
                if ((event.event === 'connected' || event.event === 'cross-referenced') && 
                    event.source && event.source.issue) {
                  const issueNumber = event.source.issue.number;
                  foundIssues.push(issueNumber);
                  hasValidIssueReference = true;
                  console.log(`✅ Found linked issue #${issueNumber} (${event.event})`);
                }
              }
              
              if (hasValidIssueReference) {
                core.notice(`✅ PR is properly linked to issues: ${foundIssues.map(n => '#' + n).join(', ')}`);
                console.log('✅ Issue reference validation passed');
              } else {
                throw new Error(
                  '❌ PR must reference an issue number.\n\n' +
                  'Please include one of the following in your PR title or description:\n' +
                  '• "Fixes #123" - Automatically closes the issue when PR is merged\n' +
                  '• "Closes #123" - Automatically closes the issue when PR is merged\n' +
                  '• "Resolves #123" - Automatically closes the issue when PR is merged\n' +
                  '• "#123" - References the issue without auto-closing\n\n' +
                  'This ensures proper issue tracking and project management.'
                );
              }
              
            } catch (apiError) {
              console.log('⚠️ GitHub API failed, falling back to text parsing');
              console.log('API Error:', apiError.message);
              
              // フォールバック: テキスト解析
              const title = context.payload.pull_request.title;
              const body = context.payload.pull_request.body || '';
              
              console.log('PR Title:', title);
              console.log('PR Body length:', body.length);
              
              const patterns = [
                /(?:close|closes|closed|fix|fixes|fixed|resolve|resolves|resolved)\s+#\d+/gi,
                /\B#\d+\b/g
              ];
              
              let foundReferences = [];
              const textToCheck = title + ' ' + body;
              
              for (const pattern of patterns) {
                const matches = textToCheck.match(pattern);
                if (matches) {
                  hasValidIssueReference = true;
                  foundReferences.push(...matches);
                }
              }
              
              console.log('Fallback found references:', foundReferences);
              
              if (!hasValidIssueReference) {
                throw new Error(
                  '❌ PR must reference an issue number.\n\n' +
                  'Please include one of the following in your PR title or description:\n' +
                  '• "Fixes #123" - Automatically closes the issue when PR is merged\n' +
                  '• "Closes #123" - Automatically closes the issue when PR is merged\n' +
                  '• "Resolves #123" - Automatically closes the issue when PR is merged\n' +
                  '• "#123" - References the issue without auto-closing\n\n' +
                  'This ensures proper issue tracking and project management.'
                );
              } else {
                console.log('✅ Fallback issue reference found:', foundReferences.join(', '));
                core.notice(`✅ Found issue references: ${foundReferences.join(', ')}`);
              }
            }

  validate-pr-format:
    runs-on: ubuntu-latest
    name: Validate PR Format
    steps:
      - name: Check PR Title Format
        uses: actions/github-script@v7
        with:
          script: |
            const title = context.payload.pull_request.title;
            
            // 推奨されるPRタイトル形式をチェック
            const validPrefixes = [
              'feat:', 'fix:', 'docs:', 'style:', 'refactor:', 
              'test:', 'chore:', 'ci:', 'build:', 'perf:'
            ];
            
            const hasValidPrefix = validPrefixes.some(prefix => 
              title.toLowerCase().startsWith(prefix)
            );
            
            if (!hasValidPrefix) {
              core.warning(
                '⚠️ Consider using conventional commit format for PR title.\n\n' +
                'Recommended formats:\n' +
                '• feat: add new feature\n' +
                '• fix: resolve bug\n' +
                '• docs: update documentation\n' +
                '• refactor: improve code structure\n' +
                '• test: add or update tests\n' +
                '• chore: maintenance tasks\n\n' +
                'Current title: ' + title
              );
            } else {
              console.log('✅ PR title follows conventional commit format');
            }